#
# @lc app=leetcode.cn id=1109 lang=python3
#
# [1109] 航班预订统计
#
# 这里有 n 个航班，它们分别从 1 到 n 进行编号。
# 有一份航班预订表 bookings ，表中第 i 条预订记录 bookings[i] = [firsti, lasti, seatsi]
# 意味着在从 firsti 到 lasti （包含 firsti 和 lasti ）的 每个航班 上预订了 seatsi 个座位。
# 请你返回一个长度为 n 的数组 answer，其中 answer[i] 是航班 i 上预订的座位总数。


# 示例 1：
# 输入：bookings = [[1, 2, 10], [2, 3, 20], [2, 5, 25]], n = 5
# 输出：[10, 55, 45, 25, 25]
# 解释：
# 航班编号        1   2   3   4   5
# 预订记录 1 ：   10  10
# 预订记录 2 ：       20  20
# 预订记录 3 ：       25  25  25  25
# 总座位数：      10  55  45  25  25
# 因此，answer = [10, 55, 45, 25, 25]

# 示例 2：
# 输入：bookings = [[1, 2, 10], [2, 2, 15]], n = 2
# 输出：[10, 25]
# 解释：
# 航班编号        1   2
# 预订记录 1 ：   10  10
# 预订记录 2 ：       15
# 总座位数：      10  25
# 因此，answer = [10, 25]


# 提示：
# 1 <= n <= 2 * 10^4
# 1 <= bookings.length <= 2 * 10^4
# bookings[i].length == 3
# 1 <= firsti <= lasti <= n
# 1 <= seatsi <= 10^4

# # 直接像下面这么写会超时，类似下面这样的测试用例
……
# # 先对bookings进行去重合并
# bookings2 = defaultdict(int)
# for f, l, s in bookings:
#     key = (f, l)
#     bookings2[key] += s
# # 改成上面这样还是会超时，类似下面这样的测试用例
# # [[10061,12344,5945],[13843,15204,7887],[6892,12950,8477],[4749,19064,9231],[2444,13836,8361],[14016,14898,4662],[9185,12233,7642],[7607,11141,2246],[942,3123,7701],[14371,15295,1993],[6825,8921,5030],[810,16921,5059],[13086,16219,9155],[10673,12731,4749],[1353,17570,9174],[1699,13369,1178],[7191,16297,1273],[89,17196,4233],[4041,11712,1982],[2476,6402,3583],[4995,13738,4025],[589,16081,6010],[2521,10398,7078],[1175,4283,1868],[626,15754,5945],[4210,10415,9879],[932,14297,8644],[15376,17217,6726],[13124,18858,9586],[4101,12410,4502],[8441,17212,3741],[1207,4365,339],[9843,17823,7076],[12355,12711,4698],[1242,10490,8548],[14562,15807,3781],[3123,13269,1035],[5206,7951,3202],[2407,2603,9268],[13259,18936,6955],[11030,18888,6626],[10727,12012,5777],[2687,8740,3959],[11132,13083,9300],[7305,14104,9368],[10449,17086,2649],[5341,6249,156],[9901,16242,7514],[6734,13066,792],[15842,19536,3727],[4653,13627,7216],[10080,18417,7059],[6022,18058,1464],[3634,18387,1533],[1670,18123,814],[15439,18449,5676],[18327,19363,1209],[718,16148,9317],[4263,6529,5923],[3152,17464,8883],[895,1708,4617],[9115,15037,3582],[10425,15161,6131],[185,8799,8319],[14394,17358,9871],[7320,8530,3244],[7555,14541,2286],[15829,18191,765],[3660,7755,4612],[1851,9362,5742],[642,928,6275],[506,19482,2861],[14203,18244,3961],[9471,9894,7967],[12203,16521,9723],[1860,10655,4799],[12723,16993,6102],[4965,11140,9711],[6176,17782,8399],[11350,13100,2877],[11254,18182,5682],[13483,15550,2131],[13837,14956,3317],[17827,18013,4204],[12950,13218,9359],[4002,16370,7772],[1298,10735,4068],[2032,17916,3205],[14285,15905,2554],[10159,10508,9770],[5837,16415,5563],[15944,18246,539],[13783,13884,9894],[14970,19252,1693],[5306,7562,4026],[11693,19140,5690],[12016,16240,7201],[84,5075,3245],[7997,16224,151],[12344,13182,7700],[8291,12463,4930],[3528,6395,6918],[4107,8335,1555],[1675,8946,3542],[4935,15040,2808],[11964,15964,4761],[10733,13955,8169],[3919,12755,1624],[1119,13627,5481],[259,3845,8549],[4254,15443,9459],[7616,14414,1621],[2113,15542,7427],[1940,4799,2778],[7214,8036,7150],[18607,19447,6428],[2121,10324,3502],[12889,19359,3072],[6972,11837,3233],[12726,16916,9853],[3803,10284,8374],[2429,2811,5545],[918,2512,6729],[8490,14510,3064],[2369,7612,1857],[1588,7545,7286],[498,637,4698],[28,1038,5441],[4369,19561,558],[1926,5474,2280],[5251,12875,1138],[8235,12338,2183],[9065,11708,9385],[2768,9754,1509],[7049,14334,9985],[10006,12540,8242],[2639,15901,7455],[3742,5178,5293],[3346,12113,9874],[4436,19088,1714],[1176,17364,7465],[2288,19170,5095],[1667,18405,3426],[13708,18287,3081],[13137,18292,9310],[11326,17617,7715],[4323,9579,5310],[2666,11937,8621],[1973,12521,5534],[7653,9134,2702],[7648,10121,2176],[6743,13188,4955],[958,12006,6828],[714,14702,9101],[6627,10600,2084],[13212,13784,2500],[24,14726,1444],[5810,11957,3311],[1525,6097,9651],[2888,13092,4840],[13168,13772,600],[13491,14242,726],[857,16515,6880],[12231,12964,8720],[11001,14769,7902],[3226,18810,6293],[2176,2905,80],[8439,11925,1182],[5734,8489,2215],[13458,18665,4340],[2330,17999,8499],[3866,4808,1814],[5157,10296,130],[7028,11147,5070],[3269,13174,9972],[15879,18800,8565],[2207,4386,4691],[961,13677,4452],[8947,18525,8962],[3807,10950,6968],[7683,13994,7371],[7131,8483,2742],[4602,9994,2978],[4381,14859,159],[3190,6575,7863],[7696,11251,3038],[11333,15271,8065],[8536,8730,5463],[336,11808,4659],[4187,13475,7510],[2207,4678,8004],[14504,16266,3893],[13634,18965,6379],[6895,19699,5875],[4625,15032,872],[3282,19573,6761],[2541,16769,9648],[1031,15658,297],[9120,14732,5937],[4087,6415,8909],[3554,14547,7503],[6242,18483,5747],[2025,17763,910],[7944,18150,5381],[3379,9523,7969],[2042,7666,3749],[16955,19948,9002],[4354,13629,215],[4132,18682,3849],[12576,19003,9665],[432,11218,1006],[8378,12015,1566],[4243,4619,7599],[13049,16413,1820],[11538,14936,8861],[13592,17959,6204],[7421,10198,6341],[204,6024,471],[13550,17199,5454],[12632,19883,3842],[10809,16033,6406],[5021,10774,2252],[7142,18826,1120],[5528,6541,5162],[8968,12108,4509],[2624,8263,2681],[13737,17380,2369],[7401,19105,2684],[3271,9115,3881],[1885,14196,5778],[4468,9774,146],[5581,14760,1205],[2073,8613,6312],[2221,14090,7874],[2775,8894,6444],[1003,18471,9541],[3810,12182,8282],[887,14625,90],[194,8606,1861],[5371,15541,5304],[7234,13280,725],[16350,18161,8956],[9460,14035,483],[4229,18075,1197],[4871,13120,261],[3256,4413,996],[15863,17190,6058],[4243,6595,3261],[6581,11526,6636],[9995,19707,1013],[13834,14327,7490],[7160,16487,3052],[2352,16049,9133],[6993,12626,5632],[13793,18842,1990],[2172,4502,8667],[4716,15266,3139],[17901,18309,1806],[7830,12602,6583],[8172,14764,7467],[633,16644,7354],[2632,17616,1896],[14441,15404,4015],[16518,18326,6174],[3274,19024,1773],[479,10735,8523],[8157,16688,4615],[3238,7731,959],[5516,12036,4179],[9875,14433,8760],[15954,17526,4869],[1974,2226,8416],[9042,19322,2096],[3501,3886,306],[7718,16768,2589],[15059,16310,6978],[8124,16468,5079],[11350,17241,2787],[11758,18341,25],[8654,16718,1732],[310,14729,4341],[2323,8541,2582],[1600,19229,5300],[144,14233,4201],[10825,19733,1798],[5392,7988,4667],[3613,4384,7622],[3279,17276,9797],[1821,13919,7691],[11451,18462,7089],[2397,16220,4657],[2136,16468,9167],[5464,13704,1060],[11787,12271,6843],[6184,17796,8775],[6727,8154,2112],[553,9078,5953],[7298,13790,2562],[5920,18798,504],[11425,12700,9478],[8926,17104,5947],[7066,19520,8714],[1906,14462,6342],[15560,16456,1805],[1566,19463,4515],[13691,14402,6868],[15337,16797,1551],[7441,15177,9395],[12298,19978,7197],[6808,16874,1306],[14512,19647,3763],[5639,17761,2039],[13573,14837,3534],[5668,14219,9018],[399,14126,1782],[1865,18636,2378],[2098,14769,646],[10999,18327,501],[8628,19060,7205],[9846,12351,9282],[4762,12238,296],[17746,18972,4733],[4222,16029,5913],[12454,17818,7490],[1974,11456,9950],[2537,17753,1838],[4459,18869,2038],[12930,16421,5477],[675,6014,5257],[9683,9957,8340],[2084,13427,7780],[3714,7901,180],[7341,19629,4094],[6203,8795,9253],[10792,15489,2067],[6687,12534,597],[8953,11471,5732],[8546,11431,3853],[5747,8387,8770],[1100,7638,9114],[9088,14101,5093],[2463,8455,138],[13816,17338,8507],[5366,8421,5200],[15166,18736,3419],[307,16913,5425],[12055,15788,1209],[7529,7894,6007],[4273,11962,2100],[280,11433,5158],[7968,11939,3029],[6127,6530,6190],[1888,6234,7613],[1048,17832,1387],[3385,6284,1045],[6446,8164,4095],[2443,13927,2656],[11464,15659,8724],[15155,18680,1520],[14319,15995,1589],[3153,14328,1418],[5278,12284,3922],[810,3561,94],[2629,8618,4604],[9979,12979,2803],[9117,15921,8114],[13064,17982,7743],[6698,17477,7093],[13352,15399,6422],[4201,7276,9959],[4612,16788,5725],[14442,18736,7320],[5073,15959,706],[2801,6313,9811],[3438,12407,7393],[11027,18565,2095],[17134,18224,8959],[5182,19438,8387],[7762,14334,5742],[10623,14406,2900],[5446,11100,6724],[12771,18728,9033],[596,17685,3743],[13673,13932,7312],[16213,18402,1617],[1334,8324,3966],[3179,8427,1925],[12797,12958,1374],[8236,13636,8225],[11953,18124,3631],[2391,17245,8003],[13485,13823,9258],[3141,12409,5894],[13398,14690,7429],[2673,13220,2443],[6720,10850,1935],[6470,16259,5666],[8025,14836,1055],[8420,13953,7799],[15289,18763,3026],[4234,14110,1440],[336,9668,4630],[3315,17925,2060],[7923,12704,2761],[9496,16900,3197],[5220,13274,7573],[13975,14947,7686],[5167,11162,5707],[7849,10428,7204],[5953,16943,97],[8337,12484,9613],[5363,5592,2],[6397,19247,5019],[6774,10663,9205],[1331,7897,2109],[1872,18167,5836],[3501,19988,5319],[3852,16916,5747],[3873,11226,9925],[8023,15799,4983],[5661,9298,7057],[3445,7202,658],[14442,17633,1002],[926,4409,8780],[1278,10707,4908],[12547,16772,519],[16050,16289,6486],[9276,19009,2414],[9443,15792,8294],[87,9924,1850],[5340,15275,4588],[12079,19880,8772],[2284,7086,6800],[11750,15699,2007],[397,10182,2065],[15529,19206,3088],[5370,19487,9870],[2788,7193,4895],[7687,15699,4452],[11354,18007,8197],[8379,11301,3720],[5541,17537,2526],[2200,11516,714],[1997,19338,3410],[7458,8026,3289],[10940,17488,9029],[1958,10751,7835],[2235,6526,6122],[10123,17382,7957],[3767,4143,5539],[8900,11720,7356],[5661,17067,6757],[13813,16255,7383],[4812,15508,5509],[13994,16804,4942],[6653,16283,5424],[397,508,1527],[9793,13788,8216],[2791,3170,9820],[5861,16774,1928],[8322,9645,5092],[9224,12127,9387],[12792,17939,8975],[2028,3702,358],[12628,13329,569],[13515,14795,7247],[1640,12799,785],[1965,9198,604],[12883,13089,7929],[2989,13617,1472],[7935,11350,6303],[1159,7497,589],[9268,15310,7844],[5774,18394,1604],[1735,17000,9742],[2087,17204,4689],[5391,18876,4253],[9210,16393,8046],[1477,9950,6025],[15141,15990,3488],[8639,16960,5790],[6722,9800,2293],[2444,19580,5232],[11063,17590,4310],[12374,14049,2654],[8153,15773,5368],[6433,16756,2153],[2909,13596,5652],[2155,10138,8291],[9663,13745,9067],[120,3390,3417],[10546,10752,4454],[6683,8041,3681],[8505,18466,1136],[10597,15788,5415],[6334,11427,9752],[4831,11180,7977],[2148,8486,3654],[7090,11902,4877],[1729,19458,8785],[2179,3363,3949],[5500,12166,2422],[6842,11395,5179],[381,6913,5514],[4516,10427,7228],[17477,17905,8927],[3725,14143,8070],[14215,17744,2517],[5154,12255,1129],[776,3009,4201],[1780,19482,5566],[2534,2966,3960],[16795,19434,6803],[1415,2019,3222],[3109,11741,8010],[11076,16099,891],[3443,18964,4270],[1411,8112,4324],[1153,19516,6819],[7435,7576,1709],[11309,11718,3166],[9849,17960,1288],[1736,9526,3036],[4799,12536,7932],[4418,11959,1755],[2703,9160,7553],[14890,16617,271],[3064,19943,9598],[6728,8803,6829],[3918,10550,3067],[329,2336,9685],[1601,7296,2814],[14618,19131,7606],[7952,16272,863],[3394,3869,3208],[11070,14480,3280],[3601,16553,4318],[10611,17657,6945],[1756,17495,9455],[9895,12159,5465],[6032,14862,6131],[10616,11438,6667],[1272,17172,8564],[2619,3255,5534],[3201,13771,5559],[11906,13725,1728],[10192,14948,2201],[5156,19315,6831],[277,13578,3931],[1900,3470,8680],[12022,15241,9964],[1570,17510,1757],[3281,15369,371],[10338,14005,6733],[8415,13544,7280],[2732,8539,1605],[18123,19883,7720],[5371,15834,4550],[3241,15313,1699],[5034,7679,2409],[12745,168'... 345700 more character
# # 看来就是不想让你用这么简单的逻辑来实现
# # 尝试降低时间复杂度到O(n)

# # for f, l, s in bookings:
# for f, l in bookings2:
#     for i in range(f - 1, l):
#         ans[i] += bookings2[(f, l)]

from typing import List
# @lc code=start
from collections import defaultdict
from itertools import accumulate


class Solution:
    def corpFlightBookings(self, bookings: List[List[int]], n: int) -> List[int]:
        ans = [0] * n

        # 降低时间复杂度到O(n)
        for f, l, s in bookings:
            ans[f - 1] += s
            if l < n:
                ans[l] -= s

        return list(accumulate(ans))

        # @lc code=end
if __name__ == "__main__":
    solution = Solution()
    # [10, 55, 45, 25, 25]
    print(solution.corpFlightBookings([[1, 2, 10], [2, 3, 20], [2, 5, 25]], 5))
    print(solution.corpFlightBookings([[1, 2, 10], [2, 2, 15]], 2))  # [10, 25]
